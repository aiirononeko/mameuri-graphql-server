type BusinessUser {
  id: ID!
  email: String!
  password: String!
}

type BusinessInfo {
  id: ID!
  user_id: ID!
  name: String!
  description: String
  address: String
  product_ids: [ID]
}

type Product {
  id: ID!
  business_id: ID!
  name: String!
  description: String!
  price: Int!
}

type Query {
  businessUsers: [BusinessUser!]!
  businessInfo: [BusinessInfo!]
  products: [Product!]
}

input newBusinessUsers {
  email: String!
  password: String!
}

input updateBusinessUsers {
  id: ID!
  password: String!
}

input deleteBusinessUsers {
  id: ID!
}

input newBusinessInfo {
  user_id: ID!
  name: String!
  description: String
  product_ids: [ID]
}

input updateBusinessInfo {
  id: ID!
  name: String
  description: String
  address: String
  product_ids: [ID]
}

input deleteBusinessInfo {
  id: ID!
}

input newProducts {
  business_id: ID!
  name: String!
  description: String!
  price: Int!
}

input updateProducts {
  id: ID!
  name: String
  description: String
  price: Int
}

input deleteProducts {
  id: ID!
}

type Mutation {
  createBusinessUser(input: newBusinessUsers!): BusinessUser!
  updateBusinessUser(input: updateBusinessUsers!): BusinessUser!
  deleteBusinessUser(input: deleteBusinessUsers!): BusinessUser!
  createBusinessInfo(input: newBusinessInfo!): BusinessInfo!
  updateBusinessInfo(input: updateBusinessInfo!): BusinessInfo!
  deleteBusinessInfo(input: deleteBusinessInfo!): BusinessInfo!
  createProduct(input: newProducts!): Product!
  updateProduct(input: updateProducts!): Product!
  deleteProduct(input: deleteProducts!): Product!
}
